# Generated by Django 4.1.2 on 2025-04-01 15:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.CharField(choices=[('1', 'Cervezas'), ('2', 'Aguardiente'), ('3', 'Gaseosas'), ('4', 'Alta'), ('5', 'Ron'), ('6', 'Otros')], default='1', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='No se permiten caracteres especiales. Solo letras, números y espacios.', regex='^[a-zA-Z0-9 ]+$')])),
                ('apellidos', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='No se permiten caracteres especiales. Solo letras, números y espacios.', regex='^[a-zA-Z0-9 ]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='El teléfono debe contener exactamente 10 dígitos.', regex='^\\d{10}$')])),
                ('debe', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)])),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='No se permiten caracteres especiales. Solo letras, números y espacios.', regex='^[a-zA-Z0-9 ]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='El teléfono debe contener exactamente 10 dígitos.', regex='^\\d{10}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='No se permiten caracteres especiales. Solo letras, números y espacios.', regex='^[a-zA-Z0-9 ]+$')])),
                ('apellidos', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='No se permiten caracteres especiales. Solo letras, números y espacios.', regex='^[a-zA-Z0-9 ]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='El teléfono debe contener exactamente 10 dígitos.', regex='^\\d{10}$')])),
                ('correo', models.EmailField(max_length=254)),
                ('usuario', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5)])),
                ('contraseña', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(8)])),
                ('tipo_documento', models.IntegerField(choices=[(1, 'Cédula de Ciudadania'), (2, 'Cédula Extranjera')], default=1)),
                ('documento', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Solo se permiten números.', regex='^\\d+$')])),
                ('rol', models.IntegerField(choices=[(1, 'Administrador'), (2, 'Empleado')], default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='No se permiten caracteres especiales. Solo letras, números y espacios.', regex='^[a-zA-Z0-9 ]+$')])),
                ('precio', models.FloatField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horas_inicio', models.TimeField()),
                ('horas_fin', models.TimeField()),
                ('fecha', models.DateField(help_text='AAAA-MM-DD')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(help_text='AAAA-MM-DD')),
                ('total', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('estado', models.CharField(choices=[('C', 'Cancelado'), ('P', 'Pendiente')], default='C', max_length=8)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.cliente')),
                ('producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.producto')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Entrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_venta', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('precio_compra', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('fecha', models.DateField(help_text='AAAA-MM-DD')),
                ('ganancias', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('perdidas', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('cantidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.producto')),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.proveedor')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('precios', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.factura')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.producto')),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salario', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.01)])),
                ('roles', models.IntegerField(choices=[(1, 'Administrador'), (2, 'Empleado')], default=2)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bar_tech.usuario')),
            ],
        ),
    ]
